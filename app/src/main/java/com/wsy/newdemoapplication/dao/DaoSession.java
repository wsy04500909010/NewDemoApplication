package com.wsy.newdemoapplication.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import greendaobean.LeaderBean;
import greendaobean.TestGreenDaoBean;
import greendaobean.MemberBean;
import greendaobean.OtherUserInfoBean;
import greendaobean.Clazz;
import greendaobean.User;
import greendaobean.UserBean;

import com.wsy.newdemoapplication.dao.LeaderBeanDao;
import com.wsy.newdemoapplication.dao.TestGreenDaoBeanDao;
import com.wsy.newdemoapplication.dao.MemberBeanDao;
import com.wsy.newdemoapplication.dao.OtherUserInfoBeanDao;
import com.wsy.newdemoapplication.dao.ClazzDao;
import com.wsy.newdemoapplication.dao.UserDao;
import com.wsy.newdemoapplication.dao.UserBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig leaderBeanDaoConfig;
    private final DaoConfig testGreenDaoBeanDaoConfig;
    private final DaoConfig memberBeanDaoConfig;
    private final DaoConfig otherUserInfoBeanDaoConfig;
    private final DaoConfig clazzDaoConfig;
    private final DaoConfig userDaoConfig;
    private final DaoConfig userBeanDaoConfig;

    private final LeaderBeanDao leaderBeanDao;
    private final TestGreenDaoBeanDao testGreenDaoBeanDao;
    private final MemberBeanDao memberBeanDao;
    private final OtherUserInfoBeanDao otherUserInfoBeanDao;
    private final ClazzDao clazzDao;
    private final UserDao userDao;
    private final UserBeanDao userBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        leaderBeanDaoConfig = daoConfigMap.get(LeaderBeanDao.class).clone();
        leaderBeanDaoConfig.initIdentityScope(type);

        testGreenDaoBeanDaoConfig = daoConfigMap.get(TestGreenDaoBeanDao.class).clone();
        testGreenDaoBeanDaoConfig.initIdentityScope(type);

        memberBeanDaoConfig = daoConfigMap.get(MemberBeanDao.class).clone();
        memberBeanDaoConfig.initIdentityScope(type);

        otherUserInfoBeanDaoConfig = daoConfigMap.get(OtherUserInfoBeanDao.class).clone();
        otherUserInfoBeanDaoConfig.initIdentityScope(type);

        clazzDaoConfig = daoConfigMap.get(ClazzDao.class).clone();
        clazzDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        userBeanDaoConfig = daoConfigMap.get(UserBeanDao.class).clone();
        userBeanDaoConfig.initIdentityScope(type);

        leaderBeanDao = new LeaderBeanDao(leaderBeanDaoConfig, this);
        testGreenDaoBeanDao = new TestGreenDaoBeanDao(testGreenDaoBeanDaoConfig, this);
        memberBeanDao = new MemberBeanDao(memberBeanDaoConfig, this);
        otherUserInfoBeanDao = new OtherUserInfoBeanDao(otherUserInfoBeanDaoConfig, this);
        clazzDao = new ClazzDao(clazzDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);
        userBeanDao = new UserBeanDao(userBeanDaoConfig, this);

        registerDao(LeaderBean.class, leaderBeanDao);
        registerDao(TestGreenDaoBean.class, testGreenDaoBeanDao);
        registerDao(MemberBean.class, memberBeanDao);
        registerDao(OtherUserInfoBean.class, otherUserInfoBeanDao);
        registerDao(Clazz.class, clazzDao);
        registerDao(User.class, userDao);
        registerDao(UserBean.class, userBeanDao);
    }
    
    public void clear() {
        leaderBeanDaoConfig.clearIdentityScope();
        testGreenDaoBeanDaoConfig.clearIdentityScope();
        memberBeanDaoConfig.clearIdentityScope();
        otherUserInfoBeanDaoConfig.clearIdentityScope();
        clazzDaoConfig.clearIdentityScope();
        userDaoConfig.clearIdentityScope();
        userBeanDaoConfig.clearIdentityScope();
    }

    public LeaderBeanDao getLeaderBeanDao() {
        return leaderBeanDao;
    }

    public TestGreenDaoBeanDao getTestGreenDaoBeanDao() {
        return testGreenDaoBeanDao;
    }

    public MemberBeanDao getMemberBeanDao() {
        return memberBeanDao;
    }

    public OtherUserInfoBeanDao getOtherUserInfoBeanDao() {
        return otherUserInfoBeanDao;
    }

    public ClazzDao getClazzDao() {
        return clazzDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public UserBeanDao getUserBeanDao() {
        return userBeanDao;
    }

}
